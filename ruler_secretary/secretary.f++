.apply(function(){
	if(.tmp.ruler==null)
		.tmp.ruler = .Map();
	
	this = .tmp.ruler;

	if(.buildplot)
		Secretary = .get_mob_index(4285); 
	else
		Secretary = .get_mob_index(4286); 
	JudePlacement = .get_obj_index(4282);
	CriminalBench = .get_obj_index(4283);
	

	Secretary.onCommand = function(mob, ch, cmdName, cmdArgs){
		//в отключке
		if(mob.position < .tables.position_table.rest)
			return false;
		//дерусь
		if(mob.fighting!=null)
			return false;
	
		//команду ввел не рулер
		if(ch.clan.name!='ruler') {
			return false;
		}
		//команда не "сесть"
		if(cmdName!='sit') {
			return false;
		}
		//уже сидит на кафедре
		if(ch.on != null && ch.on.pIndexData==.tmp.ruler.JudePlacement && ch.position==.tables.position_table.sit) {
			return false;
		}
		//процесс уже в процессе
		if(mob.process!=null 
				&& mob.process.thread!=null 
				&& mob.process.thread.running)
			return false;

		mob.process = .tmp.ruler.Process(mob, ch);
		mob.process.thread.start();
	};
	Secretary.onSpeech = function(mob, ch, msg) {
		if(ch.clan.name!='ruler' || ch.on == null 
			|| ch.on.pIndexData!=.tmp.ruler.JudePlacement 
			|| ch.position!=.tables.position_table.sit
		) return false;

		if(!mob.expectSpeech) return false;
		
		mob.speech = msg;
		mob.expectSpeech = false;
	};


	Process = function(mob, ch) {
		this = .Map();

		this.mob = mob;
		this.ch = ch;
		mob.task = .Map();
		
		thread = .scheduler.Thread(function(this) {
			try {
				run();
			} catch (e) {
				if(e == "sleep: ch left the room" || e == "sleep: someone is dead" || e == "sleep: ch not in jude placement") {
					// персонаж ушел, или кто-то скончался - это норма!
					debug("rulerSecretary.Process normal: " + e);
				} else {
					debug("rulerSecretary.Process: " + e);
				}
				cleanup();
			}
			//cleanup();
		}, this);

		thread.name = .fmt("%C1 process for %C1", mob, ch);  
		
		run = function() {
			say("Начинаем судебное заседание",1);
			
			//test:
			say(.fmt("Заседает %C1 на %O6.",ch,ch.on),1);

			taskCriminal();

			taskCrime();

			taskVictim();

			taskPlace();

			taskPunishment();

			say("Закончили упражнения!",1);

			report();

			social_vict("smile",0);

			done();
		};

		report = function () {
			var criminal;
			criminal="{1{x";
			//race
			if(mob.task.criminal.sex==2){
				criminal = criminal + .fmt("%N1", mob.task.criminal.race.nameFemale);
			} else {
				criminal = criminal + .fmt("%N1", mob.task.criminal.race.nameMale);
			} 
			criminal = criminal + "{2";
 
			//clan
			if(mob.task.criminal.clan.name!="none") {
			criminal = criminal + " {1{W[{"
				+ mob.task.criminal.clan.color
				+ mob.task.criminal.clan.name.toUpper().at(0) 
				+ "{W]{x{2";
			}
			//remort
			if(mob.task.criminal.remort_count>0) {
				criminal = criminal + " {1{W({M"
				+ mob.task.criminal.remort_count
				+ "{W){x{2";
			}
			//pretitle
			if(mob.task.criminal.pretitle!="") {
				criminal = criminal + " {1{x"
				+ mob.task.criminal.pretitle
				+ "{2";
			}
			//name
			criminal = criminal + " {1{w";
			if(mob.task.criminal.runame!="") {
				criminal = criminal + "{nr"
				+ mob.task.criminal.runame
				+ "{ne";
			}
			criminal = criminal + mob.task.criminal.name+"{nx{2";
			//title
			if(mob.task.criminal.title!="") {
				criminal = criminal + " {1"
				+ mob.task.criminal.title
				+ "{2";
			}
		  
			say("Обвиняемый " + criminal,0);

			say(.fmt("Осужден по %s.", crimesToString()),1);
			
			say("Report - ok!",1);
		};
		taskPunishment = function() {
			var punish, jail, judge, fine, confiscate, wanted,execution, additional;
			jail = false; judge = false; fine = false;
			confiscate = false; wanted = false; 
			execution = false; additional = false;
			var punish_str; 
			for(key in mob.task.crimes.keys) {
				punish = .tmp.ruler.Punishments[.tmp.ruler.Crimes[key].punishment];
				punish_str='';
				if(punish.jail!='') {
					jail = true;
					punish_str = 'тюремное заключение: '+punish.jail;
				}
				if(punish.judge!='') {
					judge = true;
					if(punish_str!='') punish_str = punish_str + ', ';
					punish_str = punish_str + "понижение законопослушности: "+punish.judge;
				}
				if(punish.fine!='') {
					fine = true;
					if(punish_str!='') punish_str = punish_str + ', ';
					punish_str = punish_str + "штраф: "+punish.fine + " золотых";
				}
				if(punish.confiscate) {
					confiscate = true;
					if(punish_str!='') punish_str = punish_str + ', ';
					punish_str = punish_str + "конфискация имущества";
				}
				if(punish.wanted) {
					wanted = true;
					if(punish_str!='') punish_str = punish_str + ', ';
					punish_str = punish_str + "объявлением в розыск";
				}
				if(punish.execution) {
					execution = true;
					if(punish_str!='') punish_str = punish_str + ', ';
					punish_str = punish_str + "смертной казнью";
				}
				if(punish.additional!='') {
					additional = true;
					if(punish_str!='') punish_str = punish_str + ', ';
					punish_str = punish_str + punish.additional;
				}
				say(.fmt('Преступление, предусмотренное статьёй %s, может караться %s.',key,punish_str),1)
			}
			mob.task.punishment=.Array();
			var yesno;
			for(;mob.task.punishment.key.size()==0;) {
				if(jail) {
					for(;mob.task.punishment['jail']==null) {
						say("Cрок заключения подсудимого?",0);
						waitSpeech();
						if(mob.speech.match("[0-9]{1,3}")) {
							mob.task.punishment['jail'] = mob.speech;
							break;
						} 
						say(.fmt('Не понял%G|о||а, что за "%s"?',mob,mob.speech),0);
					}
				}
				if(judge) {
					for(;mob.task.punishment['judge']==null;) {
						say("Изменение законопослушности?",0);
						waitSpeech();
						if(mob.speech.match("-[0-9]{1,3}")) {
							mob.task.punishment['judge'] = mob.speech;
							break;
						}else if(mob.speech.match("[0-9]{1,3}")) {
							mob.task.punishment['judge'] = "-" + mob.speech;
							break;
						}
						say(.fmt('Непонял%G|о||а, что за "%s"?',mob,mob.speech),0);
					}
				}
				if(fine) {
					for(;mob.task.punishment['fine']==null;) {
						say("Штраф?",0);
						waitSpeech();
						if(mob.speech.match("[0-9]{1,4}")) {
							mob.task.punishment['fine'] = mob.speech;
							break;
						}
						say(.fmt('Непонял%G|о||а, что за "%s"?',mob,mob.speech),0);
					}
				}
				if(confiscate) {
					for(;mob.task.punishment['confiscate']==null;) {
						say("Конфискация?",0);
						waitSpeech();
						if(getYesNo(mob.speech)==false) {
							break;
						}
						mob.task.punishment['confiscate']=mob.speech;
					}
				}
				if(wanted) {
					for(;mob.task.punishment['wanted']==null;) {
						say("Объявление в розыск?",0);
						waitSpeech();
						yesno = getYesNo(mob.speech);
						if(yesno==null) {
							say(.fmt('Не понял%G|о||а, что значит "%s"? Да или нет?',mob,mob.speech),0);
							continue; 
						}
						mob.task.punishment['wanted']=yesno;
					}
				}
				if(execution) {
					for(;mob.task.punishment['execution']==null;) {
						say("Смертная казнь?",0);
						waitSpeech();
						yesno = getYesNo(mob.speech);
						if(yesno==null) {
							say(.fmt('Не понял%G|о||а, что значит "%s"? Да или нет?',mob,mob.speech),0);
							continue; 
						}
						mob.task.punishment['execution']=yesno;
					}
				}
				if(additional) {
					for(;mob.task.punishment['additional']==null;) {
						say("Другие наказания?",0);
						waitSpeech();
						if(getYesNo(mob.speech)==false) {
							break;
						}
						mob.task.punishment['additional']=mob.speech;
					}
				}
				for(key in mob.task.punishment.key) {
					//собираем строку...
					//За совершенные преступления Буба приговарен к ...
				}
				
			}

		};
		taskPlace = function(){
			for(;mob.task.place==null;) {
				say("Где совершено преступление?",0);
				waitSpeech();
				//TODO придумать проверку места преступления
				mob.task.place=mob.speech;
				
			}
		};
		taskVictim = function() {
			var mob_msg, victims;
			if(mob.task.crimes_vict_count>1) say("Назови потерпевших по пунктам обвинения.",0);

			for(key in mob.task.crimes.keys) {
				if(.tmp.ruler.Crimes[key].victim=="") continue;
				for(;mob.task.crimes[key].victims==null;) {
					say(.fmt("Кто потерпевший по пункту %s?", key),0);
					waitSpeech();
					if(.tmp.ruler.Crimes[key].victim=="pc") {
						mob.task.crimes[key].victims = parsCharsFromSpeech();
					} else if(.tmp.ruler.Crimes[key].victim=="npc") {
						//TODO проверка мобов
						mob.task.crimes[key].victims = mob.speech;
					}

					if(mob.task.crimes[key].victims.size()==0) {
						say(.fmt("Я не знаю никого с именем %^s.",mob.speech),1);
						mob.task.crimes[key].victims = null;
					} 
				}
				if(.tmp.ruler.Crimes[key].victim=="pc") {
					mob_msg = ''; victims="Потерпевший";
					for(victim in mob.task.crimes[key].victims) {
						if(mob_msg!='') {
							mob_msg = mob_msg + ',';
							victims="Потерпевшие";
						}
						if(victim.char!=null)
							mob_msg = .fmt("%s %^C1",mob_msg,victim.char);
						else {
							var tmp_name;
							tmp_name = victim.name;
							if(victim.runame!=null && victim.runame!='') tmp_name = victim.runame;
							mob_msg = .fmt("%s %^s",mob_msg, tmp_name);
						}
					}
				} else {
					mob_msg = mob.task.crimes[key].victims; 
					if(mob.task.crimes[key].victims.match('.*, .*')) 
						victims="Потерпевшиe";
					else
						victims="Потерпевший";
				}
				
				say(.fmt("%^s по пункту %s: %s.",victims, key, mob_msg),1);
			}
		};
		taskCrime = function() {
			for(;mob.task.crimes==null;) {
				say(.fmt("По каким пунктам закона обвиняется %^C1?",mob.task.criminal.char),0);
				waitSpeech();
				mob.task.crimes = .Array();
				mob.task.not_crimes = .List();
				mob.task.crimes_vict_count = 0;
				getCrimesFromSpeech();

				if(mob.task.crimes.keys.size()>0 && mob.task.not_crimes.size()==0) {
					break;
				} 
				
				social_vict("shrug",0);
				if(mob.task.not_crimes.size()>0) {
					if(mob_msg!='') {
						say(.fmt("Можно осудить %^C1 по %s.", mob.task.criminal.char, crimesToString()),1);
					} 
					var mob_msg;
					mob_msg = '';
					for(key in mob.task.not_crimes) {
						if(mob_msg!='') mob_msg = mob_msg+", ";
						mob_msg = mob_msg + key;
					}
					mob_msg = .fmt("нельзя осудить по %s", mob_msg);
					
					if(mob.task.crimes.keys.size()>0) 
						mob_msg =  "Но " + mob_msg;
					else 
						mob_msg = .fmt("%^C1 %s.", mob.task.criminal.char, mob_msg);

					say(mob_msg,1);
				} else {
					say(.fmt('%^C2 нельзя осудить по пункту %s.', mob.task.criminal.char, mob.speech.quote()),1);
				}
				say("Для обвинения доступны следующие статьи Закона:",0);
				for(crime in .tmp.ruler.Crimes.values) {
					say(.fmt("%s. %s",crime.number,crime.name),0);
				}

				mob.task.crimes = null;
				mob.task.not_crimes = null;
				mob.task.crimes_vict_count = null;
				wait(1, mob, ch);

			}
			say(.fmt("%^C1 обвиняется по %s.", mob.task.criminal.char, crimesToString()),1);
		};
		taskCriminal = function() {
			mob.task.criminal = autoCriminal();
			for(;mob.task.criminal==null;){
				say("Кого обвиняем?",0);
				waitSpeech();
				mob.task.criminal = getCharFromSpeech();

				if(mob.task.criminal!=null) {
					if(mob.task.criminal.char==null) {
						var tmp_name;
						tmp_name = mob.task.criminal.name;
						if(mob.task.criminal.runame!=null && mob.task.criminal.runame!='') tmp_name = mob.task.criminal.runame;
						say(.fmt("Я не ощущаю присутствия %^s нигде в мире.", tmp_name),1);
						mob.task.criminal=null;
						continue;
					}

					if(!mob.task.criminal.char.is_npc())
						break;
					else {
						say(.fmt("Зачем судить %^C4? Просто убей его!!!",mob.task.criminal.char),1);
						mob.task.criminal=null;
						continue;
					}
				} 

				say(.fmt("Я не знаю никого с именем %^s",mob.speech),1);
			}
			//test
			if(mob.task.criminal.runame!="")
				say(.fmt("Обвиняемый - %^N1.", mob.task.criminal.runame),1);
			else
				say(.fmt("Обвиняемый - %^N1.", mob.task.criminal.name),1);
		};

		getCrimesFromSpeech = function() {
			var speech;
			speech = mob.speech.replace(","," ");
			speech = speech.replace(";"," ");
			for(text in speech.arguments()){
				if(text.match("([0-9]{1}\.[0-9]{1}\.[0-9]{1}|[0-9]{1}\.[0-9]{1})")) {
					for(num in text.matchGroups("([0-9]{1}\.[0-9]{1}\.[0-9]{1}|[0-9]{1}\.[0-9]{1})")) {
						if(.tmp.ruler.Crimes[num]!=null) 
							mob.task.crimes[num] = .Map();
							if(.tmp.ruler.Crimes[num].victim!='')
								mob.task.crimes_vict_count = mob.task.crimes_vict_count + 1;
						else
							mob.task.not_crimes.push_back(num);
					}
				} else {
					mob.task.not_crimes.push_back(text);
				}
			}
		};
		getCharFromSpeech = function(){
			var char, char_map;
			char_map = .Map();
			char = .get_char_world(mob.speech);

			if(char==null) {
				if(.player_exists(mob.speech)){
					char_map.name = .player_name(mob.speech);
					char_map.runame = .player_russian_name(mob.speech);
					char_map.clan = .Clan(.player_clan(mob.speech));
				} else {
					return null;
				}
			} else {
				char_map.char = char;
				if(!char.is_npc()) {
					char_map.id = char.id;
					char_map.name = char.name;
					char_map.runame = char.russianName; //падежи
					char_map.sex = char.sex;
					char_map.race = char.race; //структура
					char_map.pretitle = char.pretitle;
                    try {
                        char_map.title = char.getParsedTitle();
                    } catch(e) {
                        char_map.title = char.title;
                    }
					    
					char_map.remort_count = char.remort_count;
					char_map.clan = char.clan; //структура
				}
			}

			return char_map;
		};
		parsCharsFromSpeech = function() {
			var speech, victim, result, tmp_speech;
			tmp_speech = mob.speech;
			result = .List();
			speech = mob.speech.replace(","," ");
			speech = speech.replace(";"," ");
			for(chname in speech.arguments()) {
				mob.speech = chname;
				victim = getCharFromSpeech();
				if(victim!=null){
					if(victim.char!=null && victim.char.is_npc()) {
						say(.fmt("%^C1 не является персонажем и не может быть потерпевшим по данной статье.",victim.char));
						result = null;
						break;
					} else {
						result.push_back(victim);
					}
				}
			}
			mob.speech = tmp_speech;
			return result;
		};
		crimesToString = function() {
			var mob_msg, item_msg;
			mob_msg = ''; item_msg = "пункту";
			for(key in mob.task.crimes.keys){
				if(mob_msg!='') {
					mob_msg = mob_msg+", ";
					item_msg = "пунктам";
				}
				mob_msg = mob_msg + key + ". " + .tmp.ruler.Crimes[key].name;
				if(.tmp.ruler.Crimes[key].victim!='' && mob.task.crimes[key].victims!=null) {
					var victims_str;
					victims_str = '';
					if(.tmp.ruler.Crimes[key].victim=='npc') {
						victims_str = mob.task.crimes[key].victims;
						if(mob.task.crimes[key].victims.match('.*, .*')) 
							mob_msg = mob_msg + ", потерпевшие: "+victims_str;
						else
							mob_msg = mob_msg + ", потерпевший "+victims_str;
					} else {
						for(victim in mob.task.crimes[key].victims) {
							if(victims_str!='') victims_str = victims_str + ', ';
							if(victim.char!=null)
								victims_str = .fmt("%s%^C1",victims_str,victim.char); 
							else if(victim.runame!=null && victim.runame!='')
								victims_str = .fmt("%s%^s",victims_str,victim.runame); 
							else
								victims_str = .fmt("%s%^s",victims_str,victim.name); 
						}
						if(mob.task.crimes[key].victims.size()>1)
							mob_msg = mob_msg + ", потерпевшие: "+victims_str;
						else 
							mob_msg = mob_msg + ", потерпевший "+victims_str;
					}
				}
			}
			return .fmt("%s %s",item_msg, mob_msg);
		};
		autoCriminal = function() {
			//2DO criminal = char in manacle;
			return null;
		};
		getYesNo = function(msg) {
			if(repl.match("^да$|^yes$|^yepe$|^угу$|^ага$"))
				return true;
			else if(repl.match("^no$|^nope$|^нет$|^не-*а$"))
				return false;
			else 
				return null;

		};
		waitSpeech = function() {
			for(;;) {
				mob.speech = null;
				mob.expectSpeech = true;
				
				for(i=0; mob.speech == null; i = i + 1)
					wait(1,mob,ch);

				break;
			}
		};

 
		cleanup = function() {
			thread.stop();
			mob.process = null;
		};
		wait = function(seconds, mob, ch) {
			.scheduler.sleep(seconds * 4);
			if (mob.dead || ch.dead)
				throw "sleep: someone is dead";
			if (mob.in_room != ch.in_room)
				throw "sleep: ch left the room";
			if(ch.on == null 
				|| ch.on.pIndexData!=.tmp.ruler.JudePlacement 
				|| ch.position!=.tables.position_table.sit)
				throw "sleep: ch not in jude placement";
		};
/*         yield = function() {
			.scheduler.sleep(1);
		};
 */
		say = function(msg, pause) {
			.tmp.quest.say(msg, mob, ch);
			wait(pause, mob, ch);
		};
		tell = function(msg, pause) {
			.tmp.quest.tell(msg, mob, ch);
			wait(pause, mob, ch);
		};
		social_vict = function(social, pause) {
			mob.interpret_cmd(social, ch.name);
			wait(pause, mob, ch);
		};
		done = function() {
			debug("done...");
			mob.process=null;
		};
		debug = function(str) {
			if(.buildplot) {
				var vict;
				vict = .get_char_world("Zaleshanin");
				if(vict==null) vict = .get_char_world("Miyamoto");
				if(vict!=null) vict.act("rulers secretary debug: %s",str);
			}
		};
		
		return this;
	};

	var fillCrimes;
	fillCrimes = function() {
		this = .tmp.ruler;
	
		Crimes = .Array();
		Punishments = .Array();

		var addCrime;
		addCrime = function(crimesArray, article_num, article_name, punishment_num,victim) {
			var crime;
			crime = .Map();
			crime.number = article_num;
			crime.name = article_name;
			crime.punishment = punishment_num;
			crime.victim = victim;
	
			crimesArray[article_num] = crime;
	
			return crimesArray;
		};
		Crimes = addCrime(Crimes, "2.1.1", "Нападение на персонажа", "4.1", "pc");
		Crimes = addCrime(Crimes, "2.1.2", "Воровство у персонажа", "4.2", "pc");
		Crimes = addCrime(Crimes, "2.1.3", "Порча имущества персонажа", "4.3", "pc");

		Crimes = addCrime(Crimes, "2.2.1", "Изменение местопложения спецмоба", "4.4", "npc");
		Crimes = addCrime(Crimes, "2.2.2", "Действия против спецмоба, приводящие невозможности исполнения своих функций", "4.4", "npc");
		Crimes = addCrime(Crimes, "2.2.3", "Нападение на спецмоба", "4.4", "npc");
		Crimes = addCrime(Crimes, "2.2.4", "Убийство спецмоба", "4.4", "npc");
		Crimes = addCrime(Crimes, "2.2.5", "Воровство у спецмоба", "4.5", "npc");

		Crimes = addCrime(Crimes, "2.3", "Лжесвидетельствование", "4.6", "");
		Crimes = addCrime(Crimes, "2.4", "Превышение полномочий Правителем", "4.7", "");
		Crimes = addCrime(Crimes, "2.5", "2.1.1-2.1.3 против Правителя", "4.1", "pc");
		Crimes = addCrime(Crimes, "2.6", "Вторжение в Тюрьму, Резиденцию Правителей","4.8", "");
		Crimes = addCrime(Crimes, "2.7", "Неявка на заседание суда","4.9", "");
		Crimes = addCrime(Crimes, "2.8", "Оказание сопротивления Правителю. Содействие задержанным, арестованным и заключенным","4.8", "");

		var addPunishment;
		addPunishment = function(punishmentArray, num, jail, judge, fine, confiscate, wanted, execution, additional){
			var punish;
			punish = .Map();
			punish.number = num;
			punish.jail = jail;
			punish.judge = judge;
			punish.fine = fine;
			punish.confiscate = confiscate;
			punish.wanted = wanted;
			punish.execution = execution;
			punish.additional = additional;
	
			punishmentArray[num] = punish;
	
			return punishmentArray;
		};

		Punishments = addPunishment(Punishments, "4.1", "10-180", "20-100", "", false, true, true, "");
		Punishments = addPunishment(Punishments, "4.2", "10-60", "10-60", "", true, false, false, "");
		Punishments = addPunishment(Punishments, "4.3", "", "5-50", "до ((уровень жертвы)^2)/2", true, false, false, "");
		Punishments = addPunishment(Punishments, "4.4", "5-60", "5-50", "до уровень/8", false, false, false, "");
		Punishments = addPunishment(Punishments, "4.5", "20-40", "5-40", "до (уровень^2)/2", true, false, false, "");
		Punishments = addPunishment(Punishments, "4.6", "30-300", "50-200", "", true, false, true, "");
		Punishments = addPunishment(Punishments, "4.7", "60-300", "10-200", "", true, false, true, "понижение звания, запрет вести расследования и выносить обвинения (60 тиков - 7 суток), отстранение от занимаемой должности (изгнанием из Правителей)");
		Punishments = addPunishment(Punishments, "4.8", "10-180", "20-100", "", false, true, true, "");
		Punishments = addPunishment(Punishments, "4.9", "", "20-85", "", false, true, false, "");
	};
	fillCrimes();

	PunishmentTypeNames = .Array();
	PunishmentTypeNames['jail'] = 'тюремн|ое|ого|ому|ое|ым|ом заключен|ие|ия|ию|ие|ием|ии';
	PunishmentTypeNames['judge'] = 'законопослушност|ь|и|и|ь|ью|и';
	PunishmentTypeNames['fine'] = 'штраф||а|у||ом|е';
	PunishmentTypeNames['confiscate'] = 'конфискац|ия|ии|ии|ию|ией|ии';
	PunishmentTypeNames['wanted'] = 'объявлен|ие|ия|ию|ие|ием|ии в розыск';
	PunishmentTypeNames['execution'] = 'смертн|ая|ой|ой|ую|ой|ой казн|ь|и|и|ь|ью|и';
	PunishmentTypeNames['additional'] = '';
})