.apply(function(){
    if(.tmp.ruler==null)
        .tmp.ruler = .Map();
    
    this = .tmp.ruler;

    if(.buildplot)
        Secretary = .get_mob_index(4285); 
    else
        Secretary = .get_mob_index(4286); 
    JudePlacement = .get_obj_index(4282);
    CriminalBench = .get_obj_index(4283);
    

    Secretary.onCommand = function(mob, ch, cmdName, cmdArgs){
        //в отключке
        if(mob.position < .tables.position_table.rest)
            return false;
        //дерусь
        if(mob.fighting!=null)
            return false;
    
        //команду ввел не рулер
        if(ch.clan.name!='ruler') {
            return false;
        }
        //команда не "сесть"
        if(cmdName!='sit') {
            return false;
        }
        //уже сидит на кафедре
        if(ch.on != null && ch.on.pIndexData==.tmp.ruler.JudePlacement && ch.position==.tables.position_table.sit) {
            return false;
        }
        //процесс уже в процессе
        if(mob.process!=null 
                && mob.process.thread!=null 
                && mob.process.thread.running)
            return false;

        mob.process = .tmp.ruler.Process(mob, ch);
        mob.process.thread.start();
    };
    Secretary.onSpeech = function(mob, ch, msg) {
        if(ch.clan.name!='ruler' || ch.on == null 
            || ch.on.pIndexData!=.tmp.ruler.JudePlacement 
            || ch.position!=.tables.position_table.sit
        ) return false;

        if(!mob.expectSpeech) return false;
        
        mob.speech = msg;
        mob.expectSpeech = false;
    };


    Process = function(mob, ch) {
        this = .Map();

        this.mob = mob;
		this.ch = ch;
        mob.task = .Map();
		
		thread = .scheduler.Thread(function(this) {
			try {
                run();
			} catch (e) {
                if(e == "sleep: ch left the room" || e == "sleep: someone is dead" || e == "sleep: ch not in jude placement") {
                    // персонаж ушел, или кто-то скончался - это норма!
                    debug("rulerSecretary.Process normal: " + e);
                } else {
                    debug("rulerSecretary.Process: " + e);
                }
                cleanup();
			}
			//cleanup();
		}, this);

        thread.name = .fmt("%C1 process for %C1", mob, ch);  
        
        run = function() {
            say("Начинаем судебное заседание",1);
            
            //test:
            say(.fmt("Заседает %C1 на %O6.",ch,ch.on),1);

            say("Заседание продолжается 1!",1);
                
            taskCriminal();

            say("Заседание продолжается 2!",1);

            say("Заседание продолжается 3!",1);

            say("Закончили упражнения!",1);

            report();

            social_vict("smile",0);

            done();
        };

        report = function () {
            var criminal;
            //race
            criminal = "{le" + mob.task.criminal.race.name + "{lr";
            if(mob.task.criminal.sex==2){
                criminal = criminal + mob.task.criminal.race.nameFemale;
            } else {
                criminal = criminal + mob.task.criminal.race.nameMale;
            } 
            criminal = criminal + "{lx";
            //clan
            if(mob.task.criminal.clan.name!="none") {
            criminal = criminal + " {1{W[{"
                + mob.task.criminal.clan.color
                + mob.task.criminal.clan.name.toUpper().at(0) 
                + "{W]{x{2";
            }
            //remort
            if(mob.task.criminal.remort_count>0) {
                criminal = criminal + " {1{W({M"
                + mob.task.criminal.remort_count
                + "{W){x{2";
            }
            //pretitle
            if(mob.task.criminal.pretitle!="") {
                criminal = criminal + " {1"
                + mob.task.criminal.pretitle
                + "{2";
            }
            //name
            criminal = criminal + " {1{w";
            if(mob.task.criminal.runame!="") {
                criminal = criminal + "{lr"
                + mob.task.criminal.runame
                + "{le";
            }
            criminal = criminal + mob.task.criminal.name+"{x{2";
            //title
            if(mob.task.criminal.title!="") {
                criminal = criminal + " {1"
                + mob.task.criminal.title
                + "{2";
            }
            
            say("Обвиняемый " + criminal,1);
        };
        taskCriminal = function() {
            mob.task.criminal = autoCriminal();
            for(;mob.task.criminal==null;){
                say("Назовите обвиняемого.",1);
                waitSpeech();
                mob.task.criminal = getCharFromSpeech();

                if(mob.task.criminal!=null) break;

                say(.fmt("Я не знаю никого с именем %^s",mob.speech),1);
            }
            //test
            if(mob.task.criminal.runame!="")
                say(.fmt("Обвиняемый - %^N1.", mob.task.criminal.runame),1);
            else
                say(.fmt("Обвиняемый - %^N1.", mob.task.criminal.name),1);
        };
        getCharFromSpeech = function(){
            var char, char_map;
            char_map = .Map();
            char = .get_char_world(mob.speech);

            if(char==null) {
                return null;
            } else {
                char_map.id = char.id;
                char_map.name = char.name;
                char_map.runame = char.russianName; //падежи
                char_map.sex = char.sex;
                char_map.race = char.race; //структура
                char_map.pretitle = char.pretitle;
                char_map.title = char.title;
                char_map.remort_count = char.remort_count;
                char_map.clan = char.clan; //структура

                return char_map;
            }
            
        };
        autoCriminal = function() {
            //2DO criminal = char in manacle;
            return null;
        };
        waitSpeech = function() {
			for(;;) {
				mob.speech = null;
				mob.expectSpeech = true;
				
				for(i=0; mob.speech == null; i = i + 1)
					wait(1,mob,ch);

				break;
			}
		};

 
        cleanup = function() {
            thread.stop();
            mob.process = null;
		};
		wait = function(seconds, mob, ch) {
            .scheduler.sleep(seconds * 4);
            if (mob.dead || ch.dead)
                throw "sleep: someone is dead";
            if (mob.in_room != ch.in_room)
                throw "sleep: ch left the room";
            if(ch.on == null 
                || ch.on.pIndexData!=.tmp.ruler.JudePlacement 
                || ch.position!=.tables.position_table.sit)
                throw "sleep: ch not in jude placement";
        };
/*         yield = function() {
            .scheduler.sleep(1);
        };
 */
        say = function(msg, pause) {
			.tmp.quest.say(msg, mob, ch);
			wait(pause, mob, ch);
		};
        tell = function(msg, pause) {
			.tmp.quest.tell(msg, mob, ch);
			wait(pause, mob, ch);
		};
        social_vict = function(social, pause) {
            mob.interpret_cmd(social, ch.name);
			wait(pause, mob, ch);
        };
        done = function() {
            debug("done...");
            mob.process=null;
        };
        debug = function(str) {
            if(.buildplot) {
                var vict;
                vict = .get_char_world("Zaleshanin");
                if(vict==null) vict = .get_char_world("Miyamoto");
                if(vict!=null) vict.act("rulers secretary debug: "+str);
            }
        };
        
        return this;
    };

    var fillCrimes;
    fillCrimes = function() {
        this = .tmp.ruler;
    
        Crimes = .Array();
        Punishments = .Array();

        var addCrime;
        addCrime = function(crimesArray, article_num, article_name, punishment_num,victim) {
            var crime;
            crime = .Map();
            crime.number = article_num;
            crime.name = article_name;
            crime.punishment = punishment_num;
            crime.victim = victim;
    
            crimesArray[article_num] = crime;
    
            return crimesArray;
        };
        Crimes = addCrime(Crimes, "2.1.1", "Нападение на персонажа", "4.1", "pc");
        Crimes = addCrime(Crimes, "2.1.2", "Воровство у персонажа", "4.2", "pc");
        Crimes = addCrime(Crimes, "2.1.3", "Порча имущества персонажа", "4.3", "pc");

        Crimes = addCrime(Crimes, "2.2.1", "Изменение местопложения спецмоба", "4.4", "npc");
        Crimes = addCrime(Crimes, "2.2.2", "Действия против спецмоба, приводящие невозможности исполнения своих функций", "4.4", "npc");
        Crimes = addCrime(Crimes, "2.2.3", "Нападение на спецмоба", "4.4", "npc");
        Crimes = addCrime(Crimes, "2.2.4", "Убийство спецмоба", "4.4", "npc");
        Crimes = addCrime(Crimes, "2.2.5", "Воровство у спецмоба", "4.5", "npc");

        Crimes = addCrime(Crimes, "2.3", "Лжесвидетельствование", "4.6", "");
        Crimes = addCrime(Crimes, "2.4", "Превышение полномочий Правителем", "4.7", "");
        Crimes = addCrime(Crimes, "2.5", "2.1.1-2.1.3 против Правителя", "4.1", "pc");
        Crimes = addCrime(Crimes, "2.6", "Вторжение в Тюрьму, Резиденцию Правителей","4.8", "");
        Crimes = addCrime(Crimes, "2.7", "Неявка на заседание суда","4.9", "");
        Crimes = addCrime(Crimes, "2.8", "Оказание сопротивления Правителю. Содействие задержанным, арестованным и заключенным","4.8", "");

        var addPunishment;
        addPunishment = function(punishmentArray, num, jail, judge, fine, confiscate, wanted, execution, additional){
            var punish;
            punish = .Map();
            punish.number = num;
            punish.jail = jail;
            punish.judge = judge;
            punish.fine = fine;
            punish.confiscate = confiscate;
            punish.wanted = wanted;
            punish.execution = execution;
            punish.additional = additional;
    
            punishmentArray[num] = punish;
    
            return punishmentArray;
        };

        Punishments = addPunishment(Punishments, "4.1", "10-180", "20-100", "", false, true, true, "");
        Punishments = addPunishment(Punishments, "4.2", "10-60", "10-60", "", true, false, false, "");
        Punishments = addPunishment(Punishments, "4.3", "", "5-50", "до ((уровень жертвы)^2)/2", true, false, false, "");
        Punishments = addPunishment(Punishments, "4.4", "5-60", "5-50", "до уровень/8", false, false, false, "");
        Punishments = addPunishment(Punishments, "4.5", "20-40", "5-40", "до (уровень^2)/2", true, false, false, "");
        Punishments = addPunishment(Punishments, "4.6", "30-300", "50-200", "", true, false, true, "");
        Punishments = addPunishment(Punishments, "4.7", "60-300", "10-200", "", true, false, true, "понижение звания, запрет вести расследования и выносить обвинения (60 тиков - 7 суток), отстранение от занимаемой должности (изгнанием из Правителей)");
        Punishments = addPunishment(Punishments, "4.8", "10-180", "20-100", "", false, true, true, "");
        Punishments = addPunishment(Punishments, "4.9", "", "20-85", "", false, true, false, "");
    };
    fillCrimes();
})